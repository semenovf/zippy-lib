language: cpp
dist: xenial
sudo: required
group: edge

matrix:
  include:

  - os: linux
    compiler: gcc
    env:
      - CXX_COMPILER=g++-5
      - CC_COMPILER=gcc-5
      - CXX_STANDARD=11
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - CXX_COMPILER=g++-5
      - CC_COMPILER=gcc-5
      - CXX_STANDARD=14
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - CXX_COMPILER=g++-5
      - CC_COMPILER=gcc-5
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - CXX_COMPILER=g++-6
      - CC_COMPILER=gcc-6
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - CXX_COMPILER=g++-7
      - CC_COMPILER=gcc-7
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - CXX_COMPILER=g++-8
      - CC_COMPILER=gcc-8
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8', 'ninja-build', 'libstdc++-8-dev']

    # Coveralls (TODO)
#  - os: linux
#    compiler: gcc
#    addons:
#      apt:
#        sources: ['ubuntu-toolchain-r-test']
#        packages: ['g++-7', 'ninja-build', 'lcov']
#    before_script:
#      - pip install --user cpp-coveralls
#    after_success:
#      - coveralls --build-root build/tests --include include --gcov 'gcov-7' --gcov-options '\-lp'
#    env:
#      - CXX_COMPILER=g++-7
#      - CC_COMPILER=gcc-7
#      - CXX_STANDARD=11
#      - CMAKE_OPTIONS=-DENABLE_COVERAGE=ON
#      - BUILD_TYPE=Debug

    # Codecov.io
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7', 'ninja-build', 'lcov']
    after_success:
      - cmake --build . --target Coverage
      - bash <(curl -s https://codecov.io/bash) -f Coverage.info || echo "Codecov did not collect coverage reports"
    env:
      - CXX_COMPILER=g++-7
      - CC_COMPILER=gcc-7
      - CXX_STANDARD=11
      - CMAKE_OPTIONS=-DENABLE_COVERAGE=ON
      - BUILD_TYPE=Debug

before_script:
  - if [[ "${CXX_COMPILER}" != "" ]]; then export CXX=${CXX_COMPILER}; fi
  - if [[ "${CC_COMPILER}" != "" ]]; then export CC=${CC_COMPILER}; fi
  - if [[ "${BUILD_TYPE}" == "" ]]; then export BUILD_TYPE=Release; fi
  - uname -a
  - $CXX --version
  - mkdir -p build && cd build
  - cmake -G Ninja -DCMAKE_CXX_STANDARD=${CXX_STANDARD} -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ${CMAKE_OPTIONS} ..

script:
  - cmake --build .
  - ctest --output-on-failure

notifications:
  email: false
